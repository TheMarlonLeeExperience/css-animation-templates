/* ==========================================================
   CSS ANIMATION TEMPLATE: COLORFUL & DYNAMIC EFFECTS
   Author: Marlon Lee Smith
   Description: Animated gradients, glowing text, pulse, blend modes,
   color transitions, utilities, and notes on combining with JS.
   ========================================================== */


/* ==========================================================
   SECTION 1: KEYFRAME ANIMATIONS FOR SMOOTH GRADIENT SHIFTS
   ========================================================== */

/* Gradient Shift Animation: smoothly moves background gradient colors */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Usage: Apply on elements with a gradient background
   Example:
   background: linear-gradient(270deg, #ff6ec4, #7873f5, #4ade80);
   background-size: 600% 600%;
   animation: gradientShift 15s ease infinite;
*/


/* ==========================================================
   SECTION 2: GLOW AND PULSE EFFECTS FOR TEXT & ELEMENTS
   ========================================================== */

/* Text Glow Pulse: soft glowing text with pulsing brightness */
@keyframes textGlowPulse {
  0%, 100% {
    text-shadow:
      0 0 5px #ff6ec4,
      0 0 10px #ff6ec4,
      0 0 20px #ff6ec4,
      0 0 40px #7873f5;
    color: #fff;
  }
  50% {
    text-shadow:
      0 0 10px #ff6ec4,
      0 0 20px #ff6ec4,
      0 0 40px #7873f5,
      0 0 80px #4ade80;
    color: #f0f8ff;
  }
}

/* Usage: Apply on text elements for glowing neon effect
   Example:
   animation: textGlowPulse 3s ease-in-out infinite;
*/

/* Element Glow Pulse: glow and scale pulse effect for any block */
@keyframes elementGlowPulse {
  0%, 100% {
    box-shadow: 0 0 10px 3px #4ade80;
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 20px 6px #4ade80;
    transform: scale(1.05);
  }
}

/* Usage: Apply to buttons, cards, or any container to add gentle pulse glow
   Example:
   animation: elementGlowPulse 4s ease-in-out infinite;
*/


/* ==========================================================
   SECTION 3: BACKGROUND COLOR ANIMATIONS WITH BLEND MODES
   ========================================================== */

/* Background Blend Pulse: animate background color with blend mode */
@keyframes bgBlendPulse {
  0%, 100% {
    background-color: rgba(255, 110, 196, 0.6);
    mix-blend-mode: screen;
  }
  50% {
    background-color: rgba(120, 115, 245, 0.6);
    mix-blend-mode: screen;
  }
}

/* Usage: Use on layered elements to create glowing blended background
   Example:
   animation: bgBlendPulse 6s ease-in-out infinite;
   position: relative;
   z-index: 1;
*/


/* ==========================================================
   SECTION 4: SUBTLE COLOR CHANGES USING CSS VARIABLES
   ========================================================== */

/* Define CSS variables with default colors */
:root {
  --primary-color: #4ade80;
  --secondary-color: #7873f5;
  --accent-color: #ff6ec4;
}

/* Animate CSS variables for subtle transitions */
@keyframes subtleColorShift {
  0% {
    --primary-color: #4ade80;
    --secondary-color: #7873f5;
    --accent-color: #ff6ec4;
  }
  50% {
    --primary-color: #34d399;
    --secondary-color: #6b46c1;
    --accent-color: #db2777;
  }
  100% {
    --primary-color: #4ade80;
    --secondary-color: #7873f5;
    --accent-color: #ff6ec4;
  }
}

/* Usage:
   Apply animation on :root or a container to animate CSS variables
   Then use the variables in your styles like:
   color: var(--primary-color);
   background-color: var(--accent-color);
   Example:
   animation: subtleColorShift 20s ease infinite;
*/


/* ==========================================================
   SECTION 5: UTILITY CLASSES FOR ANIMATION CONTROL
   ========================================================== */

/* Duration utilities */
.anim-duration-short {
  animation-duration: 2s !important;
}

.anim-duration-medium {
  animation-duration: 5s !important;
}

.anim-duration-long {
  animation-duration: 15s !important;
}

/* Timing function utilities */
.anim-ease-in-out {
  animation-timing-function: ease-in-out !important;
}

.anim-linear {
  animation-timing-function: linear !important;
}

/* Iteration utilities */
.anim-infinite {
  animation-iteration-count: infinite !important;
}

.anim-once {
  animation-iteration-count: 1 !important;
}

/* Fill mode utilities */
.anim-fill-forwards {
  animation-fill-mode: forwards !important;
}

.anim-fill-none {
  animation-fill-mode: none !important;
}


/* ==========================================================
   SECTION 6: HOW CSS ANIMATIONS CAN COMBINE WITH JS FOR INTERACTIVE POINTER EFFECTS
   ==========================================================

   Explanation:

   While CSS handles smooth animations like gradients, glows, and pulses automatically, combining CSS animations with JavaScript can create
   highly interactive effects that respond to user input, such as mouse or touch movement.

   For example:

   - JavaScript can track the pointer position (mouse or touch) in real-time.
   - Based on the pointer position, JS updates CSS variables or styles dynamically.
   - CSS variables linked to animations (e.g., gradient positions, glow intensity, hue rotation) react instantly, making the animation follow the pointer.
   - This enables effects like colorful waves following the cursor, spotlight glows, or reactive pulsations.

   Advantages:

   - Keeps animation smooth by offloading visuals to CSS.
   - JS only updates control variables, optimizing performance.
   - Easily adjustable and customizable effects for engaging UI/UX.

   No JS code is provided here, but you can research pointer tracking and dynamic CSS variable updates to implement this.

*/


/* ==========================================================
   END OF CSS ANIMATION TEMPLATE
   ========================================================== */
